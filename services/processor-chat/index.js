require('dotenv').config();
const Redis = require('ioredis');
const mongoose = require('mongoose');
const Request = require('../../models/Request'); // <== –ø—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å, –µ—Å–ª–∏ —á—Ç–æ –ø–æ–¥–ø—Ä–∞–≤–∏–º

const MONGO_URI = process.env.MONGO_URI;
const REDIS_URL = process.env.REDIS_URL;

const redis = new Redis(REDIS_URL);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(MONGO_URI)
  .then(() => console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞'))
  .catch((err) => console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err));

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª Redis
redis.subscribe('new_request', (err, count) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Redis:', err);
  } else {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Redis');
    console.log('üì° –°–ª—É—à–∞–µ–º Redis: –∫–∞–Ω–∞–ª new_request');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
redis.on('message', async (channel, message) => {
  console.log(`üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ ${channel}: ${message}`);

  try {
    const request = await Request.findById(message);

    if (!request) {
      console.log('‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ');
      return;
    }

    if (!request.isCompleted) {
      console.log('‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      return;
    }

    console.log('üì¶ –ó–∞—è–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:');
    console.dir(request, { depth: null });

    // –¢—É—Ç –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è ChatGPT (–ø–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º)
  } catch (err) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', err);
  }
});
