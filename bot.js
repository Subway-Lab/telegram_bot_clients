const { Telegraf } = require('telegraf');
const connectDB = require('./db');
const Request = require('./models/Request');
require('dotenv').config();

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

connectDB();

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ.');
});

// –ö–æ–º–∞–Ω–¥–∞ /new ‚Äî –¥–ª—è –ø–æ–¥–∞—á–∏ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
bot.command('new', (ctx) => {
  ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
bot.on('photo', async (ctx) => {
  const { id, username } = ctx.from;
  const photoArray = ctx.message.photo;
  const fileId = photoArray[photoArray.length - 1].file_id; // –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –∫—Ä—É–ø–Ω–æ–µ —Ñ–æ—Ç–æ

  try {
    const request = new Request({
      userId: id.toString(),
      username: username || 'unknown',
      photo: fileId,
    });

    await request.save();
    ctx.reply('–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! üì∑');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ:', error);
    ctx.reply('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ üòì');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  const { id, username } = ctx.from;
  const message = ctx.message.text;

  try {
    const newRequest = new Request({
      userId: id.toString(),
      username: username || 'unknown',
      description: message,
    });

    await newRequest.save();
    ctx.reply('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞:', error);
    ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ üò¢');
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
